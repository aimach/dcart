@use '../../../../styles/mixin' as m;
@use '../../../../styles/variable' as v;

.mapFormContainer {
    @include m.flexbox(flex, column, nowrap, center, flex-start);
    gap: v.$space-l;
    margin: v.$space-xxl;

    >h4 {
        font-size: v.$font-size-l;
        font-weight: v.$font-weight-bold;
    }

    &Button {
        @include m.flexbox(flex, row, nowrap, center, flex-start);
        gap: v.$space-s;

        >button {
            @include m.buttonStyle(v.$color-umber, v.$color-neutral-100, (v.$space-s v.$space-l));
            @include m.flexbox(flex, row, nowrap, space-evenly, center);
            gap: v.$space-s;
        }
    }
}

.headerContainer {
    @include m.flexbox(flex, row, nowrap, space-between, center);
    margin: 0 v.$space-l;
}

.labelContainer {
    width: 50%;

    >label {
        font-size: v.$font-size-m;
        font-weight: v.$font-weight-bold;
    }

    >p {
        width: 80%;
        padding-top: v.$space-xs;
        font-size: v.$font-size-s;
        font-weight: v.$font-weight-light;
        color: v.$color-grullo;
    }
}

.mapFormInputContainer {
    @include m.flexbox(flex, row, nowrap, center, flex-start);
    gap: v.$space-s;
    width: 100%;
    padding-bottom: v.$space-s;
    border-bottom: v.$border-width-m solid v.$color-grullo-light;

    >h4 {
        font-size: v.$font-size-l;
        font-weight: v.$font-weight-bold;
    }

    .labelContainer {
        width: 50%;

        >label {
            font-size: v.$font-size-m;
            font-weight: v.$font-weight-bold;
        }

        >p {
            width: 80%;
            padding-top: v.$space-xs;
            font-size: v.$font-size-s;
            font-weight: v.$font-weight-light;
            color: v.$color-grullo;
        }
    }

    .inputContainer {
        width: 50%;
        @include m.flexbox(flex, column, nowrap, space-between, flex-start);
        gap: v.$space-s;

        >input,
        textarea,
        select {
            width: 100%;
            padding: v.$space-s;
            border: v.$border-width-m solid v.$color-grullo-light;
            border-radius: v.$border-radius-rounded;
            font-size: v.$font-size-m;
            font-family: "Vollkorn";

            &:focus {
                outline: v.$border-width-m solid v.$color-umber;
            }
        }
    }
}

.mapFormUploadInputContainer {
    @include m.flexbox(flex, column, nowrap, center, flex-start);
    gap: v.$space-s;
    width: 100%;

    >label {
        font-size: v.$font-size-m;
        font-weight: v.$font-weight-bold;
    }

    >input {
        width: 100%;
        padding: v.$space-s;
        font-size: v.$font-size-m;
        font-family: "Vollkorn";
    }
}

.scrollMapFormContainer {
    @include m.flexbox(flex, row, nowrap, flex-start, flex-start);
    height: calc(100vh - v.$main-header-height);

    .stepPanelSection {
        width: 20vw;
        min-width: 250px;
        height: 100%;
        background-color: v.$background-color-soft;
        padding-top: v.$space-l;
        text-align: center;
        border-right: v.$border-width-m solid v.$color-neutral-80;
    }

    .scrollMapFormSection {
        width: 80vw;
    }
}

.stepFormContainer {
    height: 90%;

    >form {
        flex: 3;
    }


}

.helpContainer {
    >a {
        @include m.flexbox(flex, row, nowrap, space-center, center);
        gap: v.$space-xs;
    }
}

.formButtonNavigation {
    @include m.flexbox(flex, row, nowrap, center, flex-start);
    gap: v.$space-s;

    >button {
        @include m.buttonStyle(v.$color-umber, v.$color-neutral-100, (v.$space-s v.$space-l));
        @include m.flexbox(flex, row, nowrap, space-evenly, center);
        gap: v.$space-s;
    }

    >button:disabled {
        background-color: v.$color-neutral-80;
        color: v.$color-neutral-100;
        cursor: not-allowed;
    }
}

.pointSetTable {
    width: 90%;
    margin: v.$space-l auto;

    >thead {
        border-bottom: v.$border-width-m solid v.$color-grullo;

        >tr>th {
            padding-bottom: v.$space-m;
            text-align: left;
        }

    }
}

.pointSetTableRow {
    >td {
        text-align: left;
        background-color: v.$background-color-base;
        padding: v.$space-l 0;
        border-bottom: v.$border-width-m solid v.$color-grullo;
        max-width: 100px;
    }

    >td:first-of-type {
        div {
            text-align: center;
        }
    }

    >td:last-of-type {
        text-align: center;

        >svg {
            cursor: pointer;
            margin-right: v.$space-s;
            background-color: v.$background-color-soft;
            border-radius: v.$border-radius-base;
            border: v.$border-width-m solid v.$color-neutral-80;
            padding: 5px;
            transition: scale 0.2s;
            color: v.$color-dark-lava;

        }

        >svg:hover {
            scale: 1.1;
        }
    }
}