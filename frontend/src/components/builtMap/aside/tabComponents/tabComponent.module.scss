@use '../../../../styles/mixin' as m;
@use '../../../../styles/variable' as v;

.resultContainer {
  overflow: scroll;
  height: calc(100dvh - v.$main-header-height - v.$aside-header-height - v.$space-xs);
  background-color: v.$color-neutral-100;

  p:first-child {
    padding: v.$space-s;
    margin: 0;
    font-size: v.$font-size-m;
    text-align: center;
  }

}

.resultDetails {
  padding: v.$space-s;
  border-bottom: 1px solid v.$color-neutral-80;
  cursor: pointer;
  @include m.flexbox(flex, row, nowrap, flex-start, center);
  gap: v.$space-s;

  >svg {
    color: v.$color-dark-lava;
  }
}

.selectionDetailsContainer {
  padding: v.$space-s 0 0 0;
  overflow: scroll;
  height: calc(100dvh - v.$main-header-height - v.$aside-header-height - v.$space-xs);

  >h4 {
    font-size: v.$font-size-l;
    margin: v.$space-s;
  }

  .selectionDetails {
    padding: v.$space-s;
    cursor: default;

    >summary {
      cursor: pointer;
      display: flex;
      align-items: center;

      >svg {
        transition: transform 0.2s ease;
      }
    }

  }

  .selectionDetails[open]>summary>svg {
    transform: rotate(90deg);
  }

  .sourceDetails,
  .chartDetails {
    padding: v.$space-s;


    >summary {
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: v.$space-xs;

      >svg {
        transition: transform 0.2s ease;
      }
    }

  }

  .sourceDetails[open],
  .chartDetails[open] {
    >summary>svg {
      transform: rotate(90deg);
    }
  }

  .chartDetails {
    border-bottom: 1px solid v.$color-neutral-80;
  }

  .chartDetails[open] {
    height: 50%;
  }

}

.testimoniesInfo {
  margin: v.$space-s 0;
  margin-left: v.$space-s;

  >table {
    border: 1px solid black;
    border-collapse: collapse;
    border-spacing: 1px;
    text-align: left;
    width: 100%;

    >tr,
    th,
    td {
      border: 1px solid black;
      padding: v.$space-xs;
    }

    >th {
      font-weight: v.$font-weight-bold;
    }

    >tbody>tr:first-of-type {
      background-color: v.$color-grullo-light;
    }
  }
}

.isSelected {
  background-color: v.$color-grullo-light;
}

.chartContainer {
  // width: 100%;
  // height: 60%;
  @include m.flexbox(flex, column, nowrap, space-between, center);

  >div {
    @include m.flexbox(flex, column, nowrap, center, center);
    height: 200px;
  }

  .chartType {
    @include m.flexbox(flex, row, nowrap, flex-end, center);
    gap: v.$space-s;
    width: 100%;
    margin-top: v.$space-s;
  }

  .chartRadio {
    @include m.flexbox(flex, row, nowrap, center, center);
    gap: v.$space-s;
    width: 100%;
    margin-top: v.$space-s;
  }
}



.filterContainer {

  margin: v.$space-xl v.$space-s;

  >h4 {
    font-size: v.$font-size-l;
    margin-bottom: v.$space-s;
  }

  >div {
    margin-left: v.$space-s;
  }
}


.filterButtonContainer {
  margin: v.$space-s;
  @include m.flexbox(flex, row, nowrap, center, center);
  gap: v.$space-s;

  .filterButton:first-of-type {
    @include m.buttonStyle(v.$color-dark-lava, v.$color-neutral-100);
  }

  .filterButton:last-of-type {
    @include m.buttonStyle(v.$color-neutral-100, v.$color-dark-lava);
    border: 1px solid v.$color-dark-lava;
  }
}

.introContentContainer {
  margin: v.$space-s;
  padding: v.$space-s;
  @include m.flexbox(flex, column, nowrap, center, center);

  >p {
    margin-bottom: v.$space-s;
    text-align: justify;
  }

  .checkboxContainer {
    @include m.flexbox(flex, row, nowrap, center, center);
    gap: v.$space-s;
  }



}